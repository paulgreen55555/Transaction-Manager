@page "/transactions"
@inject TransactionsClient Client

<PageTitle>Transactions</PageTitle>

<h1>Transactions</h1>

@if (transactions is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>Index</th>
                <th>Desc</th>
                <th>Amount</th>
                <th>Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{ int index = 1; }
            @foreach (var transaction in transactions)
            {
                <tr>
                    <td>@index</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Amount.ToString("C2")</td>
                    <td>@transaction.TransactionDate</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn btn-secondary me-2" role="button" href="@TransactionUrl(transaction.Id)">
                                <i class="bi bi-currency-exchange"></i>
                            </a>
                            <a class="btn btn btn-primary me-2" role="button" href="@TransactionUrl(transaction.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger"
                                    data-bs-toggle="modal"
                                    data-bs-target="@GetDeleteModalId(transaction)">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                        <DeleteTransaction Transaction="@transaction"/>
                    </td>
                </tr>
               index++;
            }
        </tbody>
    </table>
}


<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/edittransaction">Add Transaction</a>

</div>

@code {
    private Transaction[]? transactions;

    protected override async Task OnInitializedAsync()
    {
        transactions = await Client.GetTransactionsAsync();
    }

    private static string TransactionUrl(Guid id) => $"/edittransaction/{id}";

    private string GetDeleteModalId(Transaction transaction)
    {
        return $"#{DeleteTransaction.GetModalId(transaction)}";
    }
}
